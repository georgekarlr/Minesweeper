package minesweeper

fun main() {
    print("How many mines do you want on the field?")
    val numMines = readln().toInt()
    val minefield = createEmptyMineField().putRandomMines(numMines).hintNumberMines()
    displayMinefield(minefield)
}

fun displayMinefield(minefield: Array<Array<Char>>) {
    for (row in minefield) {
        println(row.joinToString(""))
    }
}

fun Array<Array<Char>>.putRandomMines(numMines: Int) = apply{
    var numMinesPlaced = 0
    while (numMinesPlaced < numMines) {
        val row = indices.random()
        val col = this[0].indices.random()
        if (this[row][col] != 'X') {
            this[row][col] = 'X'
            numMinesPlaced++
        }
    }
}

fun Array<Array<Char>>.hintNumberMines()= apply{
    for (i in 0..8) {
        for (j in 0..8) {
            if (this[i][j] == '.'){
                var count = 0
                for (x in i-1..i+1){
                    for (y in j-1..j+1){
                        if (x in 0..8 && y in 0..8 && this[x][y] == 'X') {
                            count++
                        }
                    }
                }
                if (count > 0) this[i][j] = "$count"[0]
            }
        }
    }
}

fun createEmptyMineField(): Array<Array<Char>> = Array(9) { Array(9) { '.' } }
